const appliedMixins = new WeakMap();
function getPrototypeChain(obj) {
    const chain = [];
    let proto = obj;
    while (proto) {
        chain.push(proto);
        proto = Object.getPrototypeOf(proto);
    }
    return chain;
}
export function wasApplied(mixin, superClass) {
    const entries = appliedMixins.get(mixin);
    return entries
        ? getPrototypeChain(superClass).reduce((res, klass) => res || entries.has(klass), false)
        : false;
}
export function applyMixin(mixin, superClass) {
    let entries = appliedMixins.get(mixin);
    if (!entries) {
        entries = new WeakSet();
        appliedMixins.set(mixin, entries);
    }
    entries.add(superClass);
}
//# sourceMappingURL=mixin-utils.js.map