{"version":3,"file":"mixin-test-utils.js","sourceRoot":"","sources":["mixin-test-utils.ts"],"names":[],"mappings":"AAAA,MAAM,CAAC,MAAM,sBAAsB,GAAG,CACpC,WAAkC,EAClC,IAAY,EACU,EAAE;IACxB,SAAS,cAAc,CACrB,GAA0B,EAC1B,cAAoC,EAAE;QAEtC,OAAO,GAAG,KAAK,WAAW,EAAE;YAC1B,MAAM,UAAU,GAAG,MAAM,CAAC,wBAAwB,CAAC,GAAG,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;YACxE,IAAI,UAAU,EAAE;gBACd,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;aAC9B;YACD,OAAO,cAAc,CAAC,MAAM,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE,WAAW,CAAC,CAAC;SAChE;QACD,OAAO,WAAW,CAAC;IACrB,CAAC;IACD,OAAO,cAAc,CAAC,WAAW,CAAC,CAAC;AACrC,CAAC,CAAC","sourcesContent":["export const getPropertyDescriptors = (\n  constructor: new () => HTMLElement,\n  prop: string\n): PropertyDescriptor[] => {\n  function getDescriptors(\n    obj: new () => HTMLElement,\n    descriptors: PropertyDescriptor[] = []\n  ): PropertyDescriptor[] {\n    while (obj !== HTMLElement) {\n      const descriptor = Object.getOwnPropertyDescriptor(obj.prototype, prop);\n      if (descriptor) {\n        descriptors.push(descriptor);\n      }\n      return getDescriptors(Object.getPrototypeOf(obj), descriptors);\n    }\n    return descriptors;\n  }\n  return getDescriptors(constructor);\n};\n"]}