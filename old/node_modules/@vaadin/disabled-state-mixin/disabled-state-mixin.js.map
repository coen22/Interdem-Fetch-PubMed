{"version":3,"file":"disabled-state-mixin.js","sourceRoot":"","sources":["disabled-state-mixin.ts"],"names":[],"mappings":";AAAA,OAAO,EAAc,QAAQ,EAAkB,MAAM,aAAa,CAAC;AAOnE,MAAM,CAAC,MAAM,kBAAkB,GAAG,CAChC,IAAO,EACkC,EAAE;IAC3C,MAAM,aAAc,SAAQ,IAAI;QAAhC;;YACE;;eAEG;YACyC,aAAQ,GAAG,KAAK,CAAC;QAmB/D,CAAC;QAjBW,MAAM,CAAC,KAAqB;YACpC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YAEpB,IAAI,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE;gBACzB,IAAI,IAAI,CAAC,QAAQ,EAAE;oBACjB,IAAI,CAAC,YAAY,CAAC,eAAe,EAAE,MAAM,CAAC,CAAC;iBAC5C;qBAAM,IAAI,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE;oBAChC,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC,CAAC;iBACvC;aACF;QACH,CAAC;QAED,KAAK;YACH,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;gBAClB,KAAK,CAAC,KAAK,EAAE,CAAC;aACf;QACH,CAAC;KACF;IAnB6C;QAA3C,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;mDAAkB;IAqB/D,OAAO,aAAa,CAAC;AACvB,CAAC,CAAC","sourcesContent":["import { LitElement, property, PropertyValues } from 'lit-element';\nimport { Constructor } from '@vaadin/mixin-utils';\n\nexport interface DisabledStateInterface {\n  disabled: boolean;\n}\n\nexport const DisabledStateMixin = <T extends Constructor<LitElement>>(\n  base: T\n): T & Constructor<DisabledStateInterface> => {\n  class DisabledState extends base {\n    /**\n     * If true, the user cannot interact with this element.\n     */\n    @property({ type: Boolean, reflect: true }) disabled = false;\n\n    protected update(props: PropertyValues) {\n      super.update(props);\n\n      if (props.has('disabled')) {\n        if (this.disabled) {\n          this.setAttribute('aria-disabled', 'true');\n        } else if (props.get('disabled')) {\n          this.removeAttribute('aria-disabled');\n        }\n      }\n    }\n\n    click() {\n      if (!this.disabled) {\n        super.click();\n      }\n    }\n  }\n\n  return DisabledState;\n};\n"]}