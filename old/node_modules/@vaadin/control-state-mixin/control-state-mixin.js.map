{"version":3,"file":"control-state-mixin.js","sourceRoot":"","sources":["control-state-mixin.ts"],"names":[],"mappings":"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","sourcesContent":["import { property, PropertyValues } from 'lit-element';\nimport { Constructor } from '@vaadin/mixin-utils';\nimport { DisabledStateInterface } from '@vaadin/disabled-state-mixin';\nimport { FocusVisibleInterface } from '@vaadin/focus-visible-mixin';\nimport { FocusVisibleClass } from '@vaadin/focus-visible-mixin/focus-visible-class';\nimport { KeyboardMixin } from '@vaadin/keyboard-mixin/keyboard-mixin.js';\nimport { KeyboardClass } from '@vaadin/keyboard-mixin/keyboard-class.js';\n\nexport interface ControlStateInterface {\n  tabIndex: number | null;\n  focus(): void;\n  blur(): void;\n}\n\nexport const ControlStateMixin = <\n  T extends Constructor<\n    DisabledStateInterface & FocusVisibleInterface & KeyboardClass & FocusVisibleClass\n  >\n>(\n  base: T\n): Constructor<ControlStateInterface> & T => {\n  class ControlState extends KeyboardMixin(base) {\n    @property({\n      reflect: true,\n      converter: {\n        fromAttribute: Number,\n        toAttribute: (value: number | null) => (value == null ? null : value.toString())\n      }\n    })\n    public get tabIndex() {\n      return this._tabindex as number;\n    }\n\n    public set tabIndex(value) {\n      const oldValue = this._tabindex;\n      this._tabindex = value;\n      this.requestUpdate('tabIndex', oldValue);\n    }\n\n    private _tabindex?: number;\n\n    private _previousTabIndex?: number;\n\n    private _isShiftTabbing = false;\n\n    /* eslint-disable @typescript-eslint/no-explicit-any */\n    constructor(...args: any[]) {\n      super(...args);\n\n      if (!this.hasAttribute('tabindex')) {\n        this.tabIndex = 0;\n      }\n    }\n    /* eslint-enable @typescript-eslint/no-explicit-any */\n\n    protected update(props: PropertyValues) {\n      if (props.has('disabled')) {\n        if (this.disabled) {\n          this._previousTabIndex = this.tabIndex;\n          this.tabIndex = -1;\n        } else if (props.get('disabled')) {\n          if (this._previousTabIndex !== undefined) {\n            this.tabIndex = this._previousTabIndex;\n          }\n        }\n      }\n\n      if (props.has('tabIndex')) {\n        const { tabIndex } = this;\n        // When element is disabled, propagate `tabIndex` to focusElement\n        // and then reset it on the host element to disallow interaction.\n        if (this.disabled && tabIndex != null) {\n          if (tabIndex !== -1) {\n            this._previousTabIndex = tabIndex;\n          }\n          // We need this because of resetting tabIndex to null below,\n          // so in `updated()` we have a reference to the old value.\n          props.set('tabIndex', tabIndex);\n\n          // @ts-ignore\n          this.tabIndex = null;\n        }\n      }\n\n      super.update(props);\n    }\n\n    protected updated(props: PropertyValues) {\n      super.updated(props);\n\n      if (props.has('disabled')) {\n        this.focusElement.disabled = this.disabled;\n        if (this.disabled) {\n          this.blur();\n        }\n      }\n\n      if (props.has('tabIndex')) {\n        const { tabIndex } = this;\n        const oldTabIndex = props.get('tabIndex') as number;\n        this.focusElement.tabIndex = tabIndex == null ? oldTabIndex : tabIndex;\n      }\n    }\n\n    protected _autoFocus() {\n      if (super._autoFocus) {\n        super._autoFocus();\n      }\n      this.focusElement.focus();\n    }\n\n    protected _onFocusin(event: FocusEvent) {\n      const path = event.composedPath();\n      if (path[0] === this) {\n        this._focus();\n      } else if (path.indexOf(this.focusElement) !== -1 && !this.disabled && super._onFocusin) {\n        super._onFocusin(event);\n      }\n    }\n\n    protected _onKeyDown(event: KeyboardEvent) {\n      super._onKeyDown && super._onKeyDown(event);\n      if (!event.defaultPrevented && event.shiftKey && event.keyCode === 9) {\n        // Flag is checked in _focus event handler.\n        this._isShiftTabbing = true;\n        HTMLElement.prototype.focus.apply(this);\n        this._setFocused(false);\n        // Event handling in IE is asynchronous and the flag is removed asynchronously as well\n        setTimeout(() => {\n          this._isShiftTabbing = false;\n        }, 0);\n      }\n    }\n\n    protected _setFocused(focused: boolean) {\n      if (super._setFocused) {\n        super._setFocused(focused);\n      }\n    }\n\n    /**\n     * Any element extending this mixin is required to implement this getter.\n     * It returns the actual focusable element in the component.\n     */\n    get focusElement() {\n      window.console.warn(`Please implement the 'focusElement' property in <${this.localName}>`);\n      return this;\n    }\n\n    protected _focus() {\n      if (this._isShiftTabbing) {\n        return;\n      }\n\n      this.focusElement.focus();\n      this._setFocused(true);\n    }\n\n    /**\n     * Moving the focus from the host element causes firing of the blur event what leads to problems in IE.\n     */\n    focus() {\n      if (!this.focusElement || this.disabled) {\n        return;\n      }\n\n      this.focusElement.focus();\n      this._setFocused(true);\n    }\n\n    /**\n     * Native bluring in the host element does nothing because it does not have the focus.\n     * In chrome it works, but not in FF.\n     */\n    blur() {\n      this.focusElement.blur();\n      this._setFocused(false);\n    }\n  }\n\n  return ControlState;\n};\n"]}